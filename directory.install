<?php

/*
 * Implements hook_enable
 */
function directory_enable() {
  require_once 'directory.inc';
  $t = get_t();
  //create some vocabularies
  $vocabs = array(
    'directory_ids' =>array(
      'name' => 'Directory IDs',
      'machine_name' => 'directory_ids',
      'description' => 'Known accounts and individuals',
      'hierarchy' => 1, //flat
      'module' => 'directory',
      'field_label' => 'Directory ID',
    ),
    'ua_locations' => array(
      'name' => 'UA Locations',
      'machine_name' => 'ua_locations',
      'description' => 'Locations at the University of Arizona',
      'hierarchy' => 1,
      'module' => 'directory',
      //'weight' => 1,
      'field_label' => 'UA Location',
    ),
    'ua_organizations' => array(
      'name' => 'UA Organizations',
      'machine_name' => 'ua_organizations',
      'description' => 'Organizations in the UA HR system',
      'hierarchy' => 1,
      'module' => 'directory',
      'field_label' => 'UA Department',
    ),
    'ua_affiliations' => array(
      'name' => 'UA Affiliations',
      'machine_name' => 'ua_affiliations',
      'description' => 'Ways that people are affiliated with the University of Arizona',
      'hierarchy' => 1,
      'module' => 'directory',
      'field_label' => 'UA Affiliation',
    ),
    'sa_interests' => array(
      'name' => 'SA Interests',
      'machine_name' => 'sa_interests',
      'description' => 'University of Arizona Student Affairs Professional Interests',
      'hierarchy' => 1,
      'module' => 'directory',
      //'weight' => 2,
      'field_label' => 'SA Interests',
    ),
    'alphabet' => array(
      'name' => 'Alphabet',
      'machine_name' => 'alphabet',
      'description' => 'Notational Convenience',
      'hierarchy' => 0, //flat
      'module' => 'directory',
      //'weight' => 3,
      'field_label' => 'Index',
    ),
    /*'months' => array(
      'name' => 'Months',
      'machine_name' => 'months',
      'description' => 'Notational Convenience',
      'hierarchy' => 0, //flat
      'module' => 'directory',
      //'weight' => 3,
    ),*/
  );
  // Create the term vocabularies and the reference field definitions.
  foreach ($vocabs as $vocab) {
    drupal_set_message($vocab['machine_name']);
    $name_var = $vocab['machine_name'] . '_vocabulary';
    $vocabulary = taxonomy_vocabulary_load(variable_get($name_var, 0));
    if (!$vocabulary) {
      $vocabulary = (object) $vocab;
      taxonomy_vocabulary_save($vocabulary);
      variable_set($name_var, $vocabulary->vid);
      directory_loader($vocab['machine_name']);

      $field = array(
        'field_name' => 'field_' . $vocab['machine_name'],
        'type' => 'taxonomy_term_reference',
        'cardinality' => -1,
        //'label' => $vocab['name'],

        'settings' => array(
          'allowed_values' => array(
            array(
              'vocabulary' => $vocab['machine_name'],
              'parent' => 0,
            ),
          ),
        ),
      );
      field_create_field($field);
      $f = field_info_field($field['field_name']);
      drupal_set_message('Field Definition ' . $f['id'] . ' created.');
      //now create the field instances
      $instance = array(
        'field_name' => $field['field_name'],
        'entity_type' => 'node',
        'bundle' => 'directory_profile',
        'label' => $vocab['field_label'],
      );
      field_create_instance($instance);
      drupal_set_message('Field Instance ' . $instance['field_name'] . ' created.');

    }
  }
  /* nodeProfile branch: Create a node type called profile and assign all the
   * taxonomy fields to it. Intent is to stop swimming upstream with users and
   * instead use all the built in node functionality for indexing and searching.
   * This also alleviates the problem of assigning users to all the folks who have
   * net ids. NOW their profiles can be created as directory entries and then they
   * can be affiliated with their user id if they ever choose to log into the system.
   *
   * Ensure the Directory Profile node type is available. Node definition is
   * performed in the .module file. hook_form must be implemented and the title
   * must be returned to get this to show in the list of content types.
   */
  foreach(directory_field_defs() as $field) {
    $fd = field_create_field($field);
    drupal_set_message('Created field definition ' . $fd['field_name']);
  }
  foreach(directory_field_instances() as $instance) {
    $fi = field_create_instance($instance);
    drupal_set_message('Created field instance '  . $fi['field_name']);
  }
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['directory_profile']);
  //load the instance definition for the body
  $body_instance = field_info_instance('node', 'body', 'directory_profile');
  //configure
  $body_instance['type'] = 'text_summary_or_trimmed';
  $body_instance['label'] = 'About Me';
  field_update_instance($body_instance);

}
/*
 * Implements hook_disable
 */
function directory_disable() {
  require_once 'directory.inc';
  $vocabs = array(
    'ua_locations',
    'ua_organizations',
    'directory_ids',
    'ua_affiliations',
    'sa_interests',
    'alphabet',
    'months',
  );
  // drop the term vocabularies, unset the variables and the reference field definitions.
  foreach ($vocabs as $vocab) {
      $vid = variable_get($vocab . '_vocabulary', 0);
      if ($vid > 0) {
        taxonomy_vocabulary_delete($vid);
        variable_del($vocab . '_vocabulary');
        //remove the term reference fields for this vocabulary
        field_delete_field('field_' . $vocab);
        field_purge_batch(1000);
      }
  }
// Loop over each of the fields defined by this module and delete
  // all instances of the field, their data, and the field itself.
  foreach (array_keys(directory_field_defs()) as $field) {
    field_delete_field('field_' . $field);
  }

  // Loop over any remaining field instances attached to the our
  //content type and delete them individually.
  $instances = field_info_instances('node', 'directory_profile');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }
  //tidy up
  field_purge_batch(1000);
}

function directory_field_defs() {
  return array(
    'first_name' => array(
      'field_name' => 'field_first_name',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'First Name',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
    'last_name' => array(
      'field_name' => 'field_last_name',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'Last Name',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
    'primary_title' => array(
      'field_name' => 'field_primary_title',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'Primary Title',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
    'ua_email' => array(
      'field_name' => 'field_ua_email',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'UA Email',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
    'birthday' => array(
      'field_name' => 'field_birthday',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'Birthday',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
    'primary_phone' => array(
      'field_name' => 'field_primary_phone',
      'type' => 'text',
      'cardinality' => 1,
      'label' => 'Primary Phone',
      'settings' => array(
        'max_length' => 255,
      ),
    ),
  );
}
function directory_field_instances() {
  return array(
    'first_name' => array(
      'field_name' => 'field_first_name',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'First Name',
    ),
    'last_name' => array(
      'field_name' => 'field_last_name',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'Last Name',
    ),
    'primary_title' => array(
      'field_name' => 'field_primary_title',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'Primary Title',
    ),
    'ua_email' => array(
      'field_name' => 'field_ua_email',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'UA Email',
    ),
    'ua_email' => array(
      'field_name' => 'field_birthday',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'Birthday',
    ),
    'primary_phone' => array(
      'field_name' => 'field_primary_phone',
      'entity_type' => 'node',
      'bundle' => 'directory_profile',
      'label' => 'Primary Phone',
    ),
  );
}
